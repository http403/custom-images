name: Build container
on:
  push:
    branches:
      - main
    paths:
      - 'containers/**'
  pull_request:
    paths:
      - 'containers/**'

env:
  REGISTRY: ghcr.io

jobs:
  list-containers:
    name: List the changed container definitions
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changes.outputs.matrix }}

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Search for changes
        id: changes
        run: |
          case "$GITHUB_EVNET" in
            "pull_request")
              git fetch origin "$GITHUB_BASE_REF" --depth=1
              CHANGED=$(git diff --name-only origin/"$GITHUB_BASE_REF" "$GITHUB_SHA" -- containers | grep -E 'containers/.*/' | cut -d/ -f2 | uniq)
              ;;
            "push")
              git fetch origin ${{ github.event.before }} --depth=1
              CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} -- containers | grep -E 'containers/.*/' | cut -d/ -f2 | uniq)
              ;;
            *)
              echo "::error::Something not right. Abort."
              exit 1
              ;;

          # Convert $CHANGED to a JSON array
          echo "matrix=$(echo "$CHANGED" | jq -R -s -c 'split("\n")[:-1]')" >> "$GITHUB_OUTPUT"


  build-deploy:
    name: build-deploy ${{ matrix.container }}
    needs: list-containers
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        container: ${{ fromJSON(needs.list-containers.outputs.matrix) }}
    permissions:
      contents: read
      packages: write
      pull-requests: write
    steps:
      - name: Checkout the repo
        uses: actions/chechout@v2

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pipenv'

      - name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python

      - name: Install dependencies
        run: pipenv install

      - name: Run build script
        run: pipenv run python containers/${{ matrix.container }}/build.py
        
      - name: Run deploy script
        if: github.event_name == 'push'
        run: pipenv run python containers/${{ matrix.container }}/deploy.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
